// Mascot state machine configuration

export type MascotState = 'idle' | 'typing' | 'success' | 'error' | 'thinking';

export interface MascotBehavior {
  animation: string;
  message: string;
  duration?: number;
  confetti?: boolean;
  shake?: boolean;
  speechPosition?: 'bottom-left' | 'bottom-center';
}

export const mascotBehaviors: Record<MascotState, MascotBehavior> = {
  idle: {
    animation: '/lottie/idle.json',
    message: "–ì–æ—Ç–æ–≤–∏–π, –∫–æ–ª–∏ –≤–∏ –≥–æ—Ç–æ–≤—ñ! üéØ",
    duration: Infinity,
    speechPosition: 'bottom-left'
  },
  typing: {
    animation: '/lottie/typing.json',
    message: "–í–∏–≥–ª—è–¥–∞—î —Ç–∞–∫—Ç–∏—á–Ω–æ! üí™",
    duration: Infinity,
    speechPosition: 'bottom-left'
  },
  success: {
    animation: '/lottie/success.json',
    message: "–ú—ñ—Å—ñ—è –≤–∏–∫–æ–Ω–∞–Ω–∞! üéñÔ∏è",
    duration: 3000,
    confetti: true,
    speechPosition: 'bottom-center'
  },
  error: {
    animation: '/lottie/error.json',
    message: "–ü–æ–º–∏–ª–∫–∞, –∞–ª–µ –º–∏ –ø—Ä–∏–∫—Ä–∏—î–º–æ –≤–∞—Å! üõ°Ô∏è",
    duration: 3000,
    shake: true,
    speechPosition: 'bottom-center'
  },
  thinking: {
    animation: '/lottie/typing.json',
    message: "–û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö... ‚öôÔ∏è",
    duration: Infinity,
    speechPosition: 'bottom-left'
  }
};
